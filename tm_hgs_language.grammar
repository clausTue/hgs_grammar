{	patterns = (
		{	name = 'comment.block.beginnig.grok';
			comment = 'problem description at the beginning of the grok file';
			begin = '\A';
			end = 'end title\n';
			patterns = ( { match = '.+?(?=end\s[Tt]itle)'; } );
		},
		{	name = 'keyword.grok';
			comment = 'certain repeating keywords';
			match = '[Nn]ew|[Uu]se|[Cc]lear|[Cc]hoose|[Cc]reate|[Rr]ead|end';
		},
		{	name = 'variable.grok';
			comment = 'Tab stops like $1, $2...';
			match = 'units|porous\smedia|surface|fracture|dual|channel|\set';
		},
		{	name = 'constant.numeric.grok';
			comment = 'numbers';
			match = '(\b[0-9]*\.*[0-9]*[ed][\+\-]*[0-9]+\s|\b[\+\-]?[0-9]*\.*[0-9]*\s)';
		},
		{	name = 'comment.line.grok';
			comment = 'commented line';
			begin = '[!]';
			end = '$\n?';
			beginCaptures = { 0 = { name = 'punctuation.definition.comment.grok'; }; };
			patterns = ( { match = '\\\s*\n'; } );
		},
		{	name = 'comment.block.grok';
			comment = 'comment between skip on and skip off';
			begin = '^[Ss]kip on';
			end = '^[Ss]kip off';
			beginCaptures = { 0 = { name = 'punctuation.definition.comment.grok'; }; };
			patterns = ( { match = '\\\s*\n'; } );
		},
	);
}